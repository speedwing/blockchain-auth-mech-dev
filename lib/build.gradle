/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

group = 'com.speedwing'
version = '0.0.1-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {

    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'

    compile 'com.bloxbean.cardano:cardano-client-lib:0.1.2'
    compile 'info.picocli:picocli:4.6.1'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15to18', version: '1.68'
    compile 'com.muquit.libsodiumjna:libsodium-jna:1.1.0-IOG-SNAPSHOT'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

}

test {
    useJUnit()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Cardano Blockchain Authentication'
                description = 'A library to authenticate via wallets on the Cardano blockchain'
                url = 'https://github.com/speedwing/blockchain-auth-mech-dev'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'nemo83'
                        name = 'Giovanni'
                        email = 'gargiulo.gianni@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/speedwing/blockchain-auth-mech-dev.git'
                    developerConnection = 'scm:git:ssh://git@github.com/speedwing/blockchain-auth-mech-dev.git'
                    url = 'https://github.com/speedwing/blockchain-auth-mech-dev'
                }
            }
        }
    }

    repositories {
        String ossrhUsername = System.getenv('MAVEN_USER')
        String ossrhPassword = System.getenv('MAVEN_PASSWORD')

        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'blockchain.auth.mech.cli.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}
